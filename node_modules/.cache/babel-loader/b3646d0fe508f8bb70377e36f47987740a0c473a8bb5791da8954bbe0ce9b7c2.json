{"ast":null,"code":"var _s = $RefreshSig$();\n// GameSaveState.js\nimport { useContext } from 'react';\nimport { GameContext } from './GameContext';\nconst GameSaveState = () => {\n  _s();\n  const {\n    enemyBoard,\n    setEnemyBoard,\n    ships,\n    setShips,\n    gameStarted,\n    setGameStarted,\n    gameOver,\n    setGameOver,\n    isPlayerTurn,\n    setIsPlayerTurn,\n    playerBoard,\n    setPlayerBoard,\n    timer,\n    setTimer\n  } = useContext(GameContext);\n\n  // Load game state from localStorage\n  const loadGameState = () => {\n    const savedState = JSON.parse(localStorage.getItem('gameState'));\n    if (savedState) {\n      setEnemyBoard(savedState.enemyBoard || Array(100).fill(null));\n      setShips(savedState.ships || [{\n        id: 'Carrier 5x1',\n        size: 5,\n        placed: false,\n        positions: [],\n        isHorizontal: true\n      }, {\n        id: 'Battleship 4x1',\n        size: 4,\n        placed: false,\n        positions: [],\n        isHorizontal: true\n      }, {\n        id: 'Cruiser 3x1',\n        size: 3,\n        placed: false,\n        positions: [],\n        isHorizontal: true\n      }, {\n        id: 'Submarine 3x1',\n        size: 3,\n        placed: false,\n        positions: [],\n        isHorizontal: true\n      }, {\n        id: 'Destroyer 2x1',\n        size: 2,\n        placed: false,\n        positions: [],\n        isHorizontal: true\n      }]);\n      setGameStarted(savedState.gameStarted || false);\n      setGameOver(savedState.gameOver || false);\n      setIsPlayerTurn(savedState.isPlayerTurn || true);\n      setPlayerBoard(savedState.playerBoard || Array(100).fill(null));\n      setTimer(savedState.timer || 0);\n    }\n  };\n\n  // Save game state to localStorage\n  const saveGameState = () => {\n    const gameState = {\n      enemyBoard,\n      ships,\n      gameStarted,\n      gameOver,\n      isPlayerTurn,\n      playerBoard,\n      timer\n    };\n    localStorage.setItem('gameState', JSON.stringify(gameState));\n  };\n\n  // Clear saved game state\n  const clearGameState = () => {\n    localStorage.removeItem('gameState');\n  };\n\n  // Return the functions that handle saving/loading\n  return {\n    loadGameState,\n    saveGameState,\n    clearGameState\n  };\n};\n_s(GameSaveState, \"3Q5M1oEni2lE20uFTLsxEcpYucA=\");\n_c = GameSaveState;\nexport default GameSaveState;\nvar _c;\n$RefreshReg$(_c, \"GameSaveState\");","map":{"version":3,"names":["useContext","GameContext","GameSaveState","_s","enemyBoard","setEnemyBoard","ships","setShips","gameStarted","setGameStarted","gameOver","setGameOver","isPlayerTurn","setIsPlayerTurn","playerBoard","setPlayerBoard","timer","setTimer","loadGameState","savedState","JSON","parse","localStorage","getItem","Array","fill","id","size","placed","positions","isHorizontal","saveGameState","gameState","setItem","stringify","clearGameState","removeItem","_c","$RefreshReg$"],"sources":["/Users/dereklaister/Desktop/CS5610p2/src/components/GameSave/GameSaveState.js"],"sourcesContent":["// GameSaveState.js\nimport { useContext } from 'react';\nimport { GameContext } from './GameContext';\n\nconst GameSaveState = () => {\n    const {\n        enemyBoard, setEnemyBoard,\n        ships, setShips,\n        gameStarted, setGameStarted,\n        gameOver, setGameOver,\n        isPlayerTurn, setIsPlayerTurn,\n        playerBoard, setPlayerBoard,\n        timer, setTimer\n    } = useContext(GameContext);\n\n    // Load game state from localStorage\n    const loadGameState = () => {\n        const savedState = JSON.parse(localStorage.getItem('gameState'));\n        if (savedState) {\n            setEnemyBoard(savedState.enemyBoard || Array(100).fill(null));\n            setShips(savedState.ships || [\n                { id: 'Carrier 5x1', size: 5, placed: false, positions: [], isHorizontal: true },\n                { id: 'Battleship 4x1', size: 4, placed: false, positions: [], isHorizontal: true },\n                { id: 'Cruiser 3x1', size: 3, placed: false, positions: [], isHorizontal: true },\n                { id: 'Submarine 3x1', size: 3, placed: false, positions: [], isHorizontal: true },\n                { id: 'Destroyer 2x1', size: 2, placed: false, positions: [], isHorizontal: true },\n            ]);\n            setGameStarted(savedState.gameStarted || false);\n            setGameOver(savedState.gameOver || false);\n            setIsPlayerTurn(savedState.isPlayerTurn || true);\n            setPlayerBoard(savedState.playerBoard || Array(100).fill(null));\n            setTimer(savedState.timer || 0);\n        }\n    };\n\n    // Save game state to localStorage\n    const saveGameState = () => {\n        const gameState = {\n            enemyBoard,\n            ships,\n            gameStarted,\n            gameOver,\n            isPlayerTurn,\n            playerBoard,\n            timer\n        };\n        localStorage.setItem('gameState', JSON.stringify(gameState));\n    };\n\n    // Clear saved game state\n    const clearGameState = () => {\n        localStorage.removeItem('gameState');\n    };\n\n    // Return the functions that handle saving/loading\n    return { loadGameState, saveGameState, clearGameState };\n};\n\nexport default GameSaveState;\n"],"mappings":";AAAA;AACA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,eAAe;AAE3C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IACFC,UAAU;IAAEC,aAAa;IACzBC,KAAK;IAAEC,QAAQ;IACfC,WAAW;IAAEC,cAAc;IAC3BC,QAAQ;IAAEC,WAAW;IACrBC,YAAY;IAAEC,eAAe;IAC7BC,WAAW;IAAEC,cAAc;IAC3BC,KAAK;IAAEC;EACX,CAAC,GAAGjB,UAAU,CAACC,WAAW,CAAC;;EAE3B;EACA,MAAMiB,aAAa,GAAGA,CAAA,KAAM;IACxB,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;IAChE,IAAIJ,UAAU,EAAE;MACZd,aAAa,CAACc,UAAU,CAACf,UAAU,IAAIoB,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;MAC7DlB,QAAQ,CAACY,UAAU,CAACb,KAAK,IAAI,CACzB;QAAEoB,EAAE,EAAE,aAAa;QAAEC,IAAI,EAAE,CAAC;QAAEC,MAAM,EAAE,KAAK;QAAEC,SAAS,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAK,CAAC,EAChF;QAAEJ,EAAE,EAAE,gBAAgB;QAAEC,IAAI,EAAE,CAAC;QAAEC,MAAM,EAAE,KAAK;QAAEC,SAAS,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAK,CAAC,EACnF;QAAEJ,EAAE,EAAE,aAAa;QAAEC,IAAI,EAAE,CAAC;QAAEC,MAAM,EAAE,KAAK;QAAEC,SAAS,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAK,CAAC,EAChF;QAAEJ,EAAE,EAAE,eAAe;QAAEC,IAAI,EAAE,CAAC;QAAEC,MAAM,EAAE,KAAK;QAAEC,SAAS,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAK,CAAC,EAClF;QAAEJ,EAAE,EAAE,eAAe;QAAEC,IAAI,EAAE,CAAC;QAAEC,MAAM,EAAE,KAAK;QAAEC,SAAS,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAK,CAAC,CACrF,CAAC;MACFrB,cAAc,CAACU,UAAU,CAACX,WAAW,IAAI,KAAK,CAAC;MAC/CG,WAAW,CAACQ,UAAU,CAACT,QAAQ,IAAI,KAAK,CAAC;MACzCG,eAAe,CAACM,UAAU,CAACP,YAAY,IAAI,IAAI,CAAC;MAChDG,cAAc,CAACI,UAAU,CAACL,WAAW,IAAIU,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;MAC/DR,QAAQ,CAACE,UAAU,CAACH,KAAK,IAAI,CAAC,CAAC;IACnC;EACJ,CAAC;;EAED;EACA,MAAMe,aAAa,GAAGA,CAAA,KAAM;IACxB,MAAMC,SAAS,GAAG;MACd5B,UAAU;MACVE,KAAK;MACLE,WAAW;MACXE,QAAQ;MACRE,YAAY;MACZE,WAAW;MACXE;IACJ,CAAC;IACDM,YAAY,CAACW,OAAO,CAAC,WAAW,EAAEb,IAAI,CAACc,SAAS,CAACF,SAAS,CAAC,CAAC;EAChE,CAAC;;EAED;EACA,MAAMG,cAAc,GAAGA,CAAA,KAAM;IACzBb,YAAY,CAACc,UAAU,CAAC,WAAW,CAAC;EACxC,CAAC;;EAED;EACA,OAAO;IAAElB,aAAa;IAAEa,aAAa;IAAEI;EAAe,CAAC;AAC3D,CAAC;AAAChC,EAAA,CApDID,aAAa;AAAAmC,EAAA,GAAbnC,aAAa;AAsDnB,eAAeA,aAAa;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}