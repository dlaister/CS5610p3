{"ast":null,"code":"var _jsxFileName = \"/Users/dereklaister/Desktop/CS5610p2/src/pages/Rules.js\";\nimport Navbar from '../components/Navbar';\nimport '../styles/global.css';\nimport '../styles/rules.css';\nimport Footer from '../components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Rules() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rules\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Battleship Rules\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"The Game of Battleship:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Battleship is a classic two-player game of naval strategy where players attempt to sink each other's fleet of ships. Here are the basic rules for playing Battleship:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"blue-text\",\n              children: \"Game Components:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Game Boards: Each player has a primary ocean grid (10x10) for positioning their fleet and a secondary targeting grid to track shots fired.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Ships: Each player has a fleet of five ships:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Carrier (5 spaces)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Battleship (4 spaces)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Cruiser (3 spaces)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Submarine (3 spaces)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Destroyer (2 spaces)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Peg Markers: White pegs to mark misses, and red pegs to mark hits.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"blue-text\",\n              children: \"Setup:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Positioning Ships:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Each player places their five ships on their ocean grid. Ships can be placed either horizontally or vertically, but not diagonally.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Ships must be placed within the boundaries of the grid and cannot overlap each other.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Each player keeps their ship placement hidden from the other player.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"blue-text\",\n              children: \"Gameplay Overview:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Players take turns calling out coordinates to attack the opponent's ships, attempting to guess the locations of the ships.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Calling a Shot:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"On a player's turn, they call out a coordinate (e.g., \\\"B7\\\").\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"The opponent checks their ocean grid and announces whether the shot is a \\\"hit\\\" or a \\\"miss\\\".\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"If it\\u2019s a hit, the opponent places a red peg on their ship at that coordinate.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"If it\\u2019s a miss, the opponent places a white peg on their ocean grid at that coordinate.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"The player calling the shot marks their targeting grid with a red peg for a hit or a white peg for a miss.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Recording Hits and Misses:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Players keep track of their hits and misses on their targeting grid to help refine their strategy.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Each time a ship is hit but not sunk, the player must say \\\"hit\\\" and specify which ship was hit once the ship is sunk (e.g., \\\"You sank my battleship\\\").\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"blue-text\",\n              children: \"Sinking Ships:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"A ship is considered sunk when all of its coordinates have been hit.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"The opponent must announce which ship has been sunk.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"blue-text\",\n              children: \"Winning the Game:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"The game continues in alternating turns until one player has sunk all five of their opponent\\u2019s ships.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"The first player to sink all of their opponent's ships is the winner.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"blue-text\",\n              children: \"Advanced Rules and Variations:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"For added complexity, some players may choose to incorporate advanced rules or variations:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Salvo: Each player may fire multiple shots per turn equal to the number of ships they have remaining.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Special Weapons: Introduce special weapons like \\\"air strikes\\\" or \\\"torpedoes\\\" that have different rules for targeting and hitting ships.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Fog of War: Players do not announce the type of ship hit, only whether it is a hit or miss, increasing the challenge of deducing ship placements.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"blue-text\",\n              children: \"Tips and Strategies:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Balanced Distribution: Avoid clustering your ships too closely together to make it harder for your opponent to score consecutive hits.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Pattern Shots: Use patterns like checkerboards or systematic sweeps to ensure thorough coverage of the grid.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Battleship is a game of strategic thinking, careful planning, and a bit of luck. By following these rules and developing your own strategies, you can enjoy countless hours of naval warfare fun.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"About the Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This game is the property of Hasbro, Inc. This is a project purely for demonstration purposes in which to build a website.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"My name is Derek, and this site is made by me.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://github.com/dlaister\",\n                children: \"Github\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"mailto:someone@example.com\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://linkedin.com/dereklaister\",\n                children: \"LinkedIn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = Rules;\nexport default Rules;\nvar _c;\n$RefreshReg$(_c, \"Rules\");","map":{"version":3,"names":["Navbar","Footer","jsxDEV","_jsxDEV","Rules","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["/Users/dereklaister/Desktop/CS5610p2/src/pages/Rules.js"],"sourcesContent":["import Navbar from '../components/Navbar';\nimport '../styles/global.css';\nimport '../styles/rules.css';\nimport Footer from '../components/Footer';\n\n\nfunction Rules() {\n    return (\n        <div className=\"rules\">\n            <Navbar/>\n\n            <main className=\"main\">\n                <header>\n                    <h1>Battleship Rules</h1>\n                </header>\n\n                <div className=\"main-container\">\n                    <header>\n                        <h2>The Game of Battleship:</h2>\n                    </header>\n\n                    <div>\n                        <p>Battleship is a classic two-player game of naval strategy where players attempt to sink each\n                            other's fleet of ships. Here are the basic rules for playing Battleship:</p>\n\n                        <p><span className=\"blue-text\">Game Components:</span></p>\n                        <ul>\n                            <li>Game Boards: Each player has a primary ocean grid (10x10) for positioning their fleet\n                                and a secondary targeting grid to track shots fired.\n                            </li>\n                            <li>Ships: Each player has a fleet of five ships:</li>\n                            <ol>\n                                <li>Carrier (5 spaces)</li>\n                                <li>Battleship (4 spaces)</li>\n                                <li>Cruiser (3 spaces)</li>\n                                <li>Submarine (3 spaces)</li>\n                                <li>Destroyer (2 spaces)</li>\n                            </ol>\n                            <li>Peg Markers: White pegs to mark misses, and red pegs to mark hits.</li>\n                        </ul>\n\n                        <p><span className=\"blue-text\">Setup:</span></p>\n                        <ul>\n                            <li>Positioning Ships:</li>\n                            <ul>\n                                <li>Each player places their five ships on their ocean grid. Ships can be placed either\n                                    horizontally or vertically, but not diagonally.\n                                </li>\n                                <li>Ships must be placed within the boundaries of the grid and cannot overlap each\n                                    other.\n                                </li>\n                                <li>Each player keeps their ship placement hidden from the other player.</li>\n                            </ul>\n                        </ul>\n\n                        <p><span className=\"blue-text\">Gameplay Overview:</span></p>\n                        <p>Players take turns calling out coordinates to attack the opponent's ships, attempting to\n                            guess the locations of the ships.</p>\n                        <ul>\n                            <li>Calling a Shot:</li>\n                            <ul>\n                                <li>On a player's turn, they call out a coordinate (e.g., \"B7\").</li>\n                                <li>The opponent checks their ocean grid and announces whether the shot is a \"hit\" or a\n                                    \"miss\".\n                                </li>\n                                <ul>\n                                    <li>If it’s a hit, the opponent places a red peg on their ship at that coordinate.\n                                    </li>\n                                    <li>If it’s a miss, the opponent places a white peg on their ocean grid at that\n                                        coordinate.\n                                    </li>\n                                </ul>\n                                <li>The player calling the shot marks their targeting grid with a red peg for a hit or a\n                                    white peg for a miss.\n                                </li>\n                            </ul>\n                            <li>Recording Hits and Misses:</li>\n                            <ul>\n                                <li>Players keep track of their hits and misses on their targeting grid to help refine\n                                    their strategy.\n                                </li>\n                                <li>Each time a ship is hit but not sunk, the player must say \"hit\" and specify which\n                                    ship was hit once the ship is sunk (e.g., \"You sank my battleship\").\n                                </li>\n                            </ul>\n                        </ul>\n\n                        <p><span className=\"blue-text\">Sinking Ships:</span></p>\n                        <ul>\n                            <li>A ship is considered sunk when all of its coordinates have been hit.</li>\n                            <li>The opponent must announce which ship has been sunk.</li>\n                        </ul>\n\n                        <p><span className=\"blue-text\">Winning the Game:</span></p>\n                        <ul>\n                            <li>The game continues in alternating turns until one player has sunk all five of their\n                                opponent’s ships.\n                            </li>\n                            <li>The first player to sink all of their opponent's ships is the winner.</li>\n                        </ul>\n\n                        <p><span className=\"blue-text\">Advanced Rules and Variations:</span></p>\n                        <p>For added complexity, some players may choose to incorporate advanced rules or\n                            variations:</p>\n                        <ol>\n                            <li>Salvo: Each player may fire multiple shots per turn equal to the number of ships they\n                                have remaining.\n                            </li>\n                            <li>Special Weapons: Introduce special weapons like \"air strikes\" or \"torpedoes\" that have\n                                different rules for targeting and hitting ships.\n                            </li>\n                            <li>Fog of War: Players do not announce the type of ship hit, only whether it is a hit or\n                                miss, increasing the challenge of deducing ship placements.\n                            </li>\n                        </ol>\n\n                        <p><span className=\"blue-text\">Tips and Strategies:</span></p>\n                        <ul>\n                            <li>Balanced Distribution: Avoid clustering your ships too closely together to make it\n                                harder for your opponent to score consecutive hits.\n                            </li>\n                            <li>Pattern Shots: Use patterns like checkerboards or systematic sweeps to ensure thorough\n                                coverage of the grid.\n                            </li>\n                            <li>Battleship is a game of strategic thinking, careful planning, and a bit of luck. By\n                                following these rules and developing your own strategies, you can enjoy countless hours\n                                of naval warfare fun.\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n\n                <div className=\"center-box\">\n                    <div className=\"content-box\">\n                        <h2>About the Author</h2>\n                        <p>This game is the property of Hasbro, Inc. This is a project purely for demonstration purposes\n                            in which to build a website.</p>\n                        <p>My name is Derek, and this site is made by me.</p>\n                        <ul>\n                            <li><a href=\"https://github.com/dlaister\">Github</a></li>\n                            <li><a href=\"mailto:someone@example.com\">Email</a></li>\n                            <li><a href=\"https://linkedin.com/dereklaister\">LinkedIn</a></li>\n                        </ul>\n                    </div>\n                </div>\n\n            </main>\n\n            <Footer/>\n        </div>\n    );\n}\n\nexport default Rules;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}