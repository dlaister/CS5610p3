{"ast":null,"code":"var _jsxFileName = \"/Users/dereklaister/Desktop/CS5610p2/src/pages/game/Normal.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Navbar from '../../components/Navbar';\nimport Footer from '../../components/Footer';\nimport SetEnemyBoard from '../../components/SetEnemyBoard';\nimport '../../styles/global.css';\nimport '../../styles/normal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Normal() {\n  _s();\n  const BOARD_SIZE = 10;\n  const [board, setBoard] = useState(Array(100).fill(null));\n  const [enemyBoard, setEnemyBoard] = useState(Array(100).fill(null));\n  const [ships, setShips] = useState([{\n    id: 'Carrier 5x1',\n    size: 5,\n    placed: false,\n    positions: [],\n    isHorizontal: true\n  }, {\n    id: 'Battleship 4x1',\n    size: 4,\n    placed: false,\n    positions: [],\n    isHorizontal: true\n  }, {\n    id: 'Cruiser 3x1',\n    size: 3,\n    placed: false,\n    positions: [],\n    isHorizontal: true\n  }, {\n    id: 'Submarine 3x1',\n    size: 3,\n    placed: false,\n    positions: [],\n    isHorizontal: true\n  }, {\n    id: 'Destroyer 2x1',\n    size: 2,\n    placed: false,\n    positions: [],\n    isHorizontal: true\n  }]);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [timer, setTimer] = useState(0);\n  const [playerTurn, setPlayerTurn] = useState(true);\n  useEffect(() => {\n    let interval;\n    if (gameStarted && !gameOver) {\n      interval = setInterval(() => setTimer(t => t + 1), 1000);\n    }\n    return () => clearInterval(interval);\n  }, [gameStarted, gameOver]);\n  const formatTime = seconds => {\n    const date = new Date(seconds * 1000);\n    return date.toISOString().substr(11, 8);\n  };\n  const attackEnemy = index => {\n    if (!playerTurn || gameOver || enemyBoard[index] === \"H\" || enemyBoard[index] === \"M\") return;\n    if (!gameStarted) setGameStarted(true);\n    let newBoard = [...enemyBoard];\n    if (enemyBoard[index] !== null) {\n      newBoard[index] = \"H\";\n    } else {\n      newBoard[index] = \"M\";\n    }\n    setEnemyBoard(newBoard);\n    setPlayerTurn(false);\n    if (!newBoard.includes(null)) {\n      setGameOver(true);\n      return;\n    }\n    setTimeout(enemyAttack, 1000);\n  };\n  const enemyAttack = () => {\n    let availableTargets = board.map((cell, idx) => cell !== \"H\" && cell !== \"M\" ? idx : null).filter(idx => idx !== null);\n    if (availableTargets.length === 0) return;\n    let target = availableTargets[Math.floor(Math.random() * availableTargets.length)];\n    let newBoard = [...board];\n    if (newBoard[target] !== null) {\n      newBoard[target] = \"H\";\n    } else {\n      newBoard[target] = \"M\";\n    }\n    setBoard(newBoard);\n    setPlayerTurn(true);\n  };\n  const resetGame = () => {\n    setBoard(Array(100).fill(null));\n    setEnemyBoard(Array(100).fill(null));\n    setShips(ships.map(ship => ({\n      ...ship,\n      placed: false,\n      positions: [],\n      isHorizontal: true\n    })));\n    setGameStarted(false);\n    setTimer(0);\n    setGameOver(false);\n    setPlayerTurn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"play\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Battleship Game, Normal Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timerColor\",\n            children: formatTime(timer)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          className: \"restart-button\",\n          children: \"Reset Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-description\",\n        children: \"Below, you can set your board and play against the enemy AI!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enemy Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-container\",\n          children: Array.from({\n            length: 10\n          }).map((_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board-row\",\n            children: enemyBoard.slice(rowIndex * 10, (rowIndex + 1) * 10).map((cell, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `cell ${cell === \"H\" ? 'hit' : cell === \"M\" ? 'miss' : ''}`,\n              onClick: () => attackEnemy(rowIndex * 10 + index),\n              children: cell === \"H\" ? \"✔\" : cell === \"M\" ? \"✖\" : \"\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this))\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SetEnemyBoard, {\n        setEnemyBoard: setEnemyBoard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"game-over\",\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_s(Normal, \"vHftUsXi3p/teRiOFeCdLCZkqVc=\");\n_c = Normal;\nexport default Normal;\nvar _c;\n$RefreshReg$(_c, \"Normal\");","map":{"version":3,"names":["useState","useEffect","Navbar","Footer","SetEnemyBoard","jsxDEV","_jsxDEV","Normal","_s","BOARD_SIZE","board","setBoard","Array","fill","enemyBoard","setEnemyBoard","ships","setShips","id","size","placed","positions","isHorizontal","gameStarted","setGameStarted","gameOver","setGameOver","timer","setTimer","playerTurn","setPlayerTurn","interval","setInterval","t","clearInterval","formatTime","seconds","date","Date","toISOString","substr","attackEnemy","index","newBoard","includes","setTimeout","enemyAttack","availableTargets","map","cell","idx","filter","length","target","Math","floor","random","resetGame","ship","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","from","_","rowIndex","slice","_c","$RefreshReg$"],"sources":["/Users/dereklaister/Desktop/CS5610p2/src/pages/game/Normal.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport Navbar from '../../components/Navbar';\nimport Footer from '../../components/Footer';\nimport SetEnemyBoard from '../../components/SetEnemyBoard';\nimport '../../styles/global.css';\nimport '../../styles/normal.css';\n\nfunction Normal() {\n    const BOARD_SIZE = 10;\n\n    const [board, setBoard] = useState(Array(100).fill(null));\n    const [enemyBoard, setEnemyBoard] = useState(Array(100).fill(null));\n    const [ships, setShips] = useState([\n        { id: 'Carrier 5x1', size: 5, placed: false, positions: [], isHorizontal: true },\n        { id: 'Battleship 4x1', size: 4, placed: false, positions: [], isHorizontal: true },\n        { id: 'Cruiser 3x1', size: 3, placed: false, positions: [], isHorizontal: true },\n        { id: 'Submarine 3x1', size: 3, placed: false, positions: [], isHorizontal: true },\n        { id: 'Destroyer 2x1', size: 2, placed: false, positions: [], isHorizontal: true },\n    ]);\n\n    const [gameStarted, setGameStarted] = useState(false);\n    const [gameOver, setGameOver] = useState(false);\n    const [timer, setTimer] = useState(0);\n    const [playerTurn, setPlayerTurn] = useState(true);\n\n    useEffect(() => {\n        let interval;\n        if (gameStarted && !gameOver) {\n            interval = setInterval(() => setTimer((t) => t + 1), 1000);\n        }\n        return () => clearInterval(interval);\n    }, [gameStarted, gameOver]);\n\n    const formatTime = (seconds) => {\n        const date = new Date(seconds * 1000);\n        return date.toISOString().substr(11, 8);\n    };\n\n    const attackEnemy = (index) => {\n        if (!playerTurn || gameOver || enemyBoard[index] === \"H\" || enemyBoard[index] === \"M\") return;\n\n        if (!gameStarted) setGameStarted(true);\n\n        let newBoard = [...enemyBoard];\n        if (enemyBoard[index] !== null) {\n            newBoard[index] = \"H\";\n        } else {\n            newBoard[index] = \"M\";\n        }\n        setEnemyBoard(newBoard);\n        setPlayerTurn(false);\n\n        if (!newBoard.includes(null)) {\n            setGameOver(true);\n            return;\n        }\n\n        setTimeout(enemyAttack, 1000);\n    };\n\n    const enemyAttack = () => {\n        let availableTargets = board.map((cell, idx) => (cell !== \"H\" && cell !== \"M\" ? idx : null)).filter(idx => idx !== null);\n        if (availableTargets.length === 0) return;\n\n        let target = availableTargets[Math.floor(Math.random() * availableTargets.length)];\n        let newBoard = [...board];\n\n        if (newBoard[target] !== null) {\n            newBoard[target] = \"H\";\n        } else {\n            newBoard[target] = \"M\";\n        }\n\n        setBoard(newBoard);\n        setPlayerTurn(true);\n    };\n\n    const resetGame = () => {\n        setBoard(Array(100).fill(null));\n        setEnemyBoard(Array(100).fill(null));\n        setShips(ships.map(ship => ({ ...ship, placed: false, positions: [], isHorizontal: true })));\n        setGameStarted(false);\n        setTimer(0);\n        setGameOver(false);\n        setPlayerTurn(true);\n    };\n\n    return (\n        <div className=\"play\">\n            <Navbar />\n            <main className=\"main\">\n                <header>\n                    <h1>Battleship Game, Normal Mode</h1>\n                </header>\n                <div className=\"top-controls\">\n                    <p>\n                        <span>Time:</span>\n                        <span className=\"timerColor\">{formatTime(timer)}</span>\n                    </p>\n                    <button onClick={resetGame} className=\"restart-button\">Reset Game</button>\n                </div>\n                <div className=\"board-description\">Below, you can set your board and play against the enemy AI!</div>\n                <h2>Enemy Board</h2>\n                <div className=\"board\">\n                    <div className=\"grid-container\">\n                        {Array.from({ length: 10 }).map((_, rowIndex) => (\n                            <div key={rowIndex} className=\"board-row\">\n                                {enemyBoard.slice(rowIndex * 10, (rowIndex + 1) * 10).map((cell, index) => (\n                                    <div\n                                        key={index}\n                                        className={`cell ${cell === \"H\" ? 'hit' : cell === \"M\" ? 'miss' : ''}`}\n                                        onClick={() => attackEnemy(rowIndex * 10 + index)}\n                                    >\n                                        {cell === \"H\" ? \"✔\" : cell === \"M\" ? \"✖\" : \"\"}\n                                    </div>\n                                ))}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <SetEnemyBoard setEnemyBoard={setEnemyBoard} />\n                {gameOver && <p className=\"game-over\">Game Over!</p>}\n            </main>\n            <Footer />\n        </div>\n    );\n}\n\nexport default Normal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}