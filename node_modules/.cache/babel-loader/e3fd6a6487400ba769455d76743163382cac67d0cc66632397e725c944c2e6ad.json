{"ast":null,"code":"var _jsxFileName = \"/Users/dereklaister/Desktop/CS5610p2/src/pages/Play.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOARD_SIZE = 10;\nconst SHIPS = [{\n  id: \"Carrier 5x1\",\n  size: 5\n}, {\n  id: \"Battleship 4x1\",\n  size: 4\n}, {\n  id: \"Cruiser 3x1\",\n  size: 3\n}, {\n  id: \"Submarine 3x1\",\n  size: 3\n}, {\n  id: \"Destroyer 2x1\",\n  size: 2\n}];\nconst Play = () => {\n  _s();\n  const [playerBoard, setPlayerBoard] = useState(Array(BOARD_SIZE).fill(null).map(() => Array(BOARD_SIZE).fill(null)));\n  const [enemyBoard, setEnemyBoard] = useState(Array(BOARD_SIZE).fill(null).map(() => Array(BOARD_SIZE).fill(null)));\n  const [placedShips, setPlacedShips] = useState([]);\n  const [isHorizontal, setIsHorizontal] = useState(true);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [timer, setTimer] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  useEffect(() => {\n    let interval;\n    if (gameStarted && !gameOver) {\n      interval = setInterval(() => setTimer(t => t + 1), 1000);\n    }\n    return () => clearInterval(interval);\n  }, [gameStarted, gameOver]);\n  const placeShip = (row, col, ship) => {\n    if (gameStarted) return;\n    let newBoard = [...playerBoard];\n    let newPlacedShips = [...placedShips];\n    for (let i = 0; i < ship.size; i++) {\n      if (isHorizontal) {\n        if (col + ship.size > BOARD_SIZE) return;\n        newBoard[row][col + i] = \"S\";\n      } else {\n        if (row + ship.size > BOARD_SIZE) return;\n        newBoard[row + i][col] = \"S\";\n      }\n    }\n    newPlacedShips.push({\n      row,\n      col,\n      ship,\n      isHorizontal\n    });\n    setPlayerBoard(newBoard);\n    setPlacedShips(newPlacedShips);\n  };\n  const attack = (row, col) => {\n    if (!gameStarted) setGameStarted(true);\n    if (gameOver || enemyBoard[row][col]) return;\n    let newBoard = [...enemyBoard];\n    let hit = Math.random() > 0.5 ? \"H\" : \"M\"; // Random hit or miss\n    newBoard[row][col] = hit;\n    setEnemyBoard(newBoard);\n    if (!newBoard.flat().includes(null)) setGameOver(true);\n  };\n  const resetGame = () => {\n    setPlayerBoard(Array(BOARD_SIZE).fill(null).map(() => Array(BOARD_SIZE).fill(null)));\n    setEnemyBoard(Array(BOARD_SIZE).fill(null).map(() => Array(BOARD_SIZE).fill(null)));\n    setPlacedShips([]);\n    setGameStarted(false);\n    setGameOver(false);\n    setTimer(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Battleship\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time: \", timer, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsHorizontal(!isHorizontal),\n      className: \"mb-2 p-2 bg-blue-500 text-white rounded\",\n      children: [\"Rotate Ship (\", isHorizontal ? \"Horizontal\" : \"Vertical\", \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-bold\",\n          children: \"Your Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-10 gap-1 border p-2\",\n          children: playerBoard.map((row, rIdx) => row.map((cell, cIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-8 h-8 border flex items-center justify-center ${cell === \"S\" ? \"bg-gray-500\" : \"bg-blue-200\"}`,\n            onClick: () => placeShip(rIdx, cIdx, SHIPS[placedShips.length])\n          }, `${rIdx}-${cIdx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-bold\",\n          children: \"Enemy Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-10 gap-1 border p-2\",\n          children: enemyBoard.map((row, rIdx) => row.map((cell, cIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-8 h-8 border flex items-center justify-center cursor-pointer ${cell === \"H\" ? \"bg-red-500\" : cell === \"M\" ? \"bg-gray-300\" : \"bg-blue-400\"}`,\n            onClick: () => attack(rIdx, cIdx),\n            children: cell === \"H\" ? \"✔\" : cell === \"M\" ? \"✖\" : \"\"\n          }, `${rIdx}-${cIdx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      className: \"mt-4 p-2 bg-red-500 text-white rounded\",\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl font-bold text-red-600 mt-4\",\n      children: \"Game Over!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(Play, \"q+3uYPAlxJwAnvKEI+m5zpUuNpM=\");\n_c = Play;\nexport default Play;\nvar _c;\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BOARD_SIZE","SHIPS","id","size","Play","_s","playerBoard","setPlayerBoard","Array","fill","map","enemyBoard","setEnemyBoard","placedShips","setPlacedShips","isHorizontal","setIsHorizontal","gameStarted","setGameStarted","timer","setTimer","gameOver","setGameOver","interval","setInterval","t","clearInterval","placeShip","row","col","ship","newBoard","newPlacedShips","i","push","attack","hit","Math","random","flat","includes","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","rIdx","cell","cIdx","length","_c","$RefreshReg$"],"sources":["/Users/dereklaister/Desktop/CS5610p2/src/pages/Play.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst BOARD_SIZE = 10;\nconst SHIPS = [\n    { id: \"Carrier 5x1\", size: 5 },\n    { id: \"Battleship 4x1\", size: 4 },\n    { id: \"Cruiser 3x1\", size: 3 },\n    { id: \"Submarine 3x1\", size: 3 },\n    { id: \"Destroyer 2x1\", size: 2 },\n];\n\nconst Play = () => {\n    const [playerBoard, setPlayerBoard] = useState(\n        Array(BOARD_SIZE).fill(null).map(() => Array(BOARD_SIZE).fill(null))\n    );\n    const [enemyBoard, setEnemyBoard] = useState(\n        Array(BOARD_SIZE).fill(null).map(() => Array(BOARD_SIZE).fill(null))\n    );\n    const [placedShips, setPlacedShips] = useState([]);\n    const [isHorizontal, setIsHorizontal] = useState(true);\n    const [gameStarted, setGameStarted] = useState(false);\n    const [timer, setTimer] = useState(0);\n    const [gameOver, setGameOver] = useState(false);\n\n    useEffect(() => {\n        let interval;\n        if (gameStarted && !gameOver) {\n            interval = setInterval(() => setTimer((t) => t + 1), 1000);\n        }\n        return () => clearInterval(interval);\n    }, [gameStarted, gameOver]);\n\n    const placeShip = (row, col, ship) => {\n        if (gameStarted) return;\n        let newBoard = [...playerBoard];\n        let newPlacedShips = [...placedShips];\n\n        for (let i = 0; i < ship.size; i++) {\n            if (isHorizontal) {\n                if (col + ship.size > BOARD_SIZE) return;\n                newBoard[row][col + i] = \"S\";\n            } else {\n                if (row + ship.size > BOARD_SIZE) return;\n                newBoard[row + i][col] = \"S\";\n            }\n        }\n\n        newPlacedShips.push({ row, col, ship, isHorizontal });\n        setPlayerBoard(newBoard);\n        setPlacedShips(newPlacedShips);\n    };\n\n    const attack = (row, col) => {\n        if (!gameStarted) setGameStarted(true);\n        if (gameOver || enemyBoard[row][col]) return;\n        let newBoard = [...enemyBoard];\n        let hit = Math.random() > 0.5 ? \"H\" : \"M\"; // Random hit or miss\n        newBoard[row][col] = hit;\n        setEnemyBoard(newBoard);\n        if (!newBoard.flat().includes(null)) setGameOver(true);\n    };\n\n    const resetGame = () => {\n        setPlayerBoard(Array(BOARD_SIZE).fill(null).map(() => Array(BOARD_SIZE).fill(null)));\n        setEnemyBoard(Array(BOARD_SIZE).fill(null).map(() => Array(BOARD_SIZE).fill(null)));\n        setPlacedShips([]);\n        setGameStarted(false);\n        setGameOver(false);\n        setTimer(0);\n    };\n\n    return (\n        <div className=\"flex flex-col items-center p-4\">\n            <h1 className=\"text-2xl font-bold mb-4\">Battleship</h1>\n            <p>Time: {timer} seconds</p>\n            <button onClick={() => setIsHorizontal(!isHorizontal)} className=\"mb-2 p-2 bg-blue-500 text-white rounded\">\n                Rotate Ship ({isHorizontal ? \"Horizontal\" : \"Vertical\"})\n            </button>\n            <div className=\"flex gap-8\">\n                <div>\n                    <h2 className=\"text-lg font-bold\">Your Board</h2>\n                    <div className=\"grid grid-cols-10 gap-1 border p-2\">\n                        {playerBoard.map((row, rIdx) =>\n                            row.map((cell, cIdx) => (\n                                <div\n                                    key={`${rIdx}-${cIdx}`}\n                                    className={`w-8 h-8 border flex items-center justify-center ${cell === \"S\" ? \"bg-gray-500\" : \"bg-blue-200\"}`}\n                                    onClick={() => placeShip(rIdx, cIdx, SHIPS[placedShips.length])}\n                                ></div>\n                            ))\n                        )}\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"text-lg font-bold\">Enemy Board</h2>\n                    <div className=\"grid grid-cols-10 gap-1 border p-2\">\n                        {enemyBoard.map((row, rIdx) =>\n                            row.map((cell, cIdx) => (\n                                <div\n                                    key={`${rIdx}-${cIdx}`}\n                                    className={`w-8 h-8 border flex items-center justify-center cursor-pointer ${cell === \"H\" ? \"bg-red-500\" : cell === \"M\" ? \"bg-gray-300\" : \"bg-blue-400\"}`}\n                                    onClick={() => attack(rIdx, cIdx)}\n                                >\n                                    {cell === \"H\" ? \"✔\" : cell === \"M\" ? \"✖\" : \"\"}\n                                </div>\n                            ))\n                        )}\n                    </div>\n                </div>\n            </div>\n            <button onClick={resetGame} className=\"mt-4 p-2 bg-red-500 text-white rounded\">Reset Game</button>\n            {gameOver && <p className=\"text-xl font-bold text-red-600 mt-4\">Game Over!</p>}\n        </div>\n    );\n};\n\nexport default Play;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}