{"ast":null,"code":"var _jsxFileName = \"/Users/dereklaister/Desktop/CS5610p2/src/pages/Play.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Navbar from '../components/Navbar';\nimport '../styles/global.css';\nimport '../styles/sample.css';\nimport Footer from '../components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Play() {\n  _s();\n  const BOARD_SIZE = 10;\n  const ROW_LABELS = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'];\n  const COLUMN_LABELS = [...Array(10).keys()]; // 0-9\n\n  const [board, setBoard] = useState(Array(100).fill(null));\n  const [ships, setShips] = useState([{\n    id: 'Carrier',\n    size: 5,\n    placed: false,\n    positions: []\n  }, {\n    id: 'Battleship',\n    size: 4,\n    placed: false,\n    positions: []\n  }, {\n    id: 'Cruiser',\n    size: 3,\n    placed: false,\n    positions: []\n  }, {\n    id: 'Submarine',\n    size: 3,\n    placed: false,\n    positions: []\n  }, {\n    id: 'Destroyer',\n    size: 2,\n    placed: false,\n    positions: []\n  }]);\n  const handleDragStart = (e, ship) => {\n    if (!ship.placed) {\n      e.dataTransfer.setData('ship', JSON.stringify(ship));\n      e.target.style.opacity = '0.5';\n    }\n  };\n  const handleDragEnd = e => {\n    e.target.style.opacity = '1';\n  };\n  const handleDrop = (e, index) => {\n    e.preventDefault();\n    const ship = JSON.parse(e.dataTransfer.getData('ship'));\n    if (ship.placed) return;\n    const newBoard = [...board];\n    const newShipPositions = getShipPositions(index, ship.size);\n    if (!newShipPositions || newShipPositions.some(pos => newBoard[pos] !== null)) {\n      alert(\"Invalid ship placement!\");\n      return;\n    }\n    ship.placed = true;\n    ship.positions = newShipPositions;\n    setShips([...ships]);\n    newShipPositions.forEach(pos => newBoard[pos] = ship.id);\n    setBoard(newBoard);\n  };\n  const getShipPositions = (startIndex, size) => {\n    const positions = [];\n    for (let i = 0; i < size; i++) {\n      const newIndex = startIndex + i;\n      if (newIndex < 100 && Math.floor(newIndex / BOARD_SIZE) === Math.floor(startIndex / BOARD_SIZE)) {\n        positions.push(newIndex);\n      } else {\n        return null;\n      }\n    }\n    return positions;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"play\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Battleship\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column-labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-space\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), COLUMN_LABELS.map(num => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-label\",\n            children: num\n          }, num, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          children: ROW_LABELS.map((label, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row-label\",\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), Array(10).fill(0).map((_, colIndex) => {\n              const index = rowIndex * 10 + colIndex;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `cell ${board[index] ? 'ship' : ''}`,\n                onDrop: e => handleDrop(e, index),\n                onDragOver: e => e.preventDefault(),\n                children: board[index] ? \"S\" : \"\"\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 41\n              }, this);\n            })]\n          }, label, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(Play, \"XuG4mymfCagn112KFtH8WX3rwUE=\");\n_c = Play;\nexport default Play;\nvar _c;\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"names":["useState","useEffect","Navbar","Footer","jsxDEV","_jsxDEV","Play","_s","BOARD_SIZE","ROW_LABELS","COLUMN_LABELS","Array","keys","board","setBoard","fill","ships","setShips","id","size","placed","positions","handleDragStart","e","ship","dataTransfer","setData","JSON","stringify","target","style","opacity","handleDragEnd","handleDrop","index","preventDefault","parse","getData","newBoard","newShipPositions","getShipPositions","some","pos","alert","forEach","startIndex","i","newIndex","Math","floor","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","num","label","rowIndex","_","colIndex","onDrop","onDragOver","_c","$RefreshReg$"],"sources":["/Users/dereklaister/Desktop/CS5610p2/src/pages/Play.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport Navbar from '../components/Navbar';\nimport '../styles/global.css';\nimport '../styles/sample.css';\nimport Footer from '../components/Footer';\n\nfunction Play() {\n    const BOARD_SIZE = 10;\n    const ROW_LABELS = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'];\n    const COLUMN_LABELS = [...Array(10).keys()]; // 0-9\n\n    const [board, setBoard] = useState(Array(100).fill(null));\n\n    const [ships, setShips] = useState([\n        { id: 'Carrier', size: 5, placed: false, positions: [] },\n        { id: 'Battleship', size: 4, placed: false, positions: [] },\n        { id: 'Cruiser', size: 3, placed: false, positions: [] },\n        { id: 'Submarine', size: 3, placed: false, positions: [] },\n        { id: 'Destroyer', size: 2, placed: false, positions: [] },\n    ]);\n\n    const handleDragStart = (e, ship) => {\n        if (!ship.placed) {\n            e.dataTransfer.setData('ship', JSON.stringify(ship));\n            e.target.style.opacity = '0.5';\n        }\n    };\n\n    const handleDragEnd = (e) => {\n        e.target.style.opacity = '1';\n    };\n\n    const handleDrop = (e, index) => {\n        e.preventDefault();\n        const ship = JSON.parse(e.dataTransfer.getData('ship'));\n\n        if (ship.placed) return;\n\n        const newBoard = [...board];\n        const newShipPositions = getShipPositions(index, ship.size);\n\n        if (!newShipPositions || newShipPositions.some(pos => newBoard[pos] !== null)) {\n            alert(\"Invalid ship placement!\");\n            return;\n        }\n\n        ship.placed = true;\n        ship.positions = newShipPositions;\n        setShips([...ships]);\n\n        newShipPositions.forEach(pos => newBoard[pos] = ship.id);\n        setBoard(newBoard);\n    };\n\n    const getShipPositions = (startIndex, size) => {\n        const positions = [];\n        for (let i = 0; i < size; i++) {\n            const newIndex = startIndex + i;\n            if (newIndex < 100 && Math.floor(newIndex / BOARD_SIZE) === Math.floor(startIndex / BOARD_SIZE)) {\n                positions.push(newIndex);\n            } else {\n                return null;\n            }\n        }\n        return positions;\n    };\n\n    return (\n        <div className=\"play\">\n            <Navbar />\n\n            <main className=\"main\">\n                <header>\n                    <h1>Battleship</h1>\n                </header>\n\n                <h2>Your Board</h2>\n                <div className=\"board-wrapper\">\n                    {/* Column Labels */}\n                    <div className=\"column-labels\">\n                        <div className=\"empty-space\"></div>\n                        {COLUMN_LABELS.map((num) => (\n                            <div key={num} className=\"col-label\">{num}</div>\n                        ))}\n                    </div>\n\n                    {/* Grid with Row Labels */}\n                    <div className=\"grid\">\n                        {ROW_LABELS.map((label, rowIndex) => (\n                            <div key={label} className=\"row\">\n                                <div className=\"row-label\">{label}</div>\n                                {Array(10).fill(0).map((_, colIndex) => {\n                                    const index = rowIndex * 10 + colIndex;\n                                    return (\n                                        <div\n                                            key={index}\n                                            className={`cell ${board[index] ? 'ship' : ''}`}\n                                            onDrop={(e) => handleDrop(e, index)}\n                                            onDragOver={(e) => e.preventDefault()}\n                                        >\n                                            {board[index] ? \"S\" : \"\"}\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </main>\n\n            <Footer />\n        </div>\n    );\n}\n\nexport default Play;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,sBAAsB;AAC7B,OAAO,sBAAsB;AAC7B,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAMC,UAAU,GAAG,EAAE;EACrB,MAAMC,UAAU,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACrE,MAAMC,aAAa,GAAG,CAAC,GAAGC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACW,KAAK,CAAC,GAAG,CAAC,CAACI,IAAI,CAAC,IAAI,CAAC,CAAC;EAEzD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,CAC/B;IAAEkB,EAAE,EAAE,SAAS;IAAEC,IAAI,EAAE,CAAC;IAAEC,MAAM,EAAE,KAAK;IAAEC,SAAS,EAAE;EAAG,CAAC,EACxD;IAAEH,EAAE,EAAE,YAAY;IAAEC,IAAI,EAAE,CAAC;IAAEC,MAAM,EAAE,KAAK;IAAEC,SAAS,EAAE;EAAG,CAAC,EAC3D;IAAEH,EAAE,EAAE,SAAS;IAAEC,IAAI,EAAE,CAAC;IAAEC,MAAM,EAAE,KAAK;IAAEC,SAAS,EAAE;EAAG,CAAC,EACxD;IAAEH,EAAE,EAAE,WAAW;IAAEC,IAAI,EAAE,CAAC;IAAEC,MAAM,EAAE,KAAK;IAAEC,SAAS,EAAE;EAAG,CAAC,EAC1D;IAAEH,EAAE,EAAE,WAAW;IAAEC,IAAI,EAAE,CAAC;IAAEC,MAAM,EAAE,KAAK;IAAEC,SAAS,EAAE;EAAG,CAAC,CAC7D,CAAC;EAEF,MAAMC,eAAe,GAAGA,CAACC,CAAC,EAAEC,IAAI,KAAK;IACjC,IAAI,CAACA,IAAI,CAACJ,MAAM,EAAE;MACdG,CAAC,CAACE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;MACpDD,CAAC,CAACM,MAAM,CAACC,KAAK,CAACC,OAAO,GAAG,KAAK;IAClC;EACJ,CAAC;EAED,MAAMC,aAAa,GAAIT,CAAC,IAAK;IACzBA,CAAC,CAACM,MAAM,CAACC,KAAK,CAACC,OAAO,GAAG,GAAG;EAChC,CAAC;EAED,MAAME,UAAU,GAAGA,CAACV,CAAC,EAAEW,KAAK,KAAK;IAC7BX,CAAC,CAACY,cAAc,CAAC,CAAC;IAClB,MAAMX,IAAI,GAAGG,IAAI,CAACS,KAAK,CAACb,CAAC,CAACE,YAAY,CAACY,OAAO,CAAC,MAAM,CAAC,CAAC;IAEvD,IAAIb,IAAI,CAACJ,MAAM,EAAE;IAEjB,MAAMkB,QAAQ,GAAG,CAAC,GAAGzB,KAAK,CAAC;IAC3B,MAAM0B,gBAAgB,GAAGC,gBAAgB,CAACN,KAAK,EAAEV,IAAI,CAACL,IAAI,CAAC;IAE3D,IAAI,CAACoB,gBAAgB,IAAIA,gBAAgB,CAACE,IAAI,CAACC,GAAG,IAAIJ,QAAQ,CAACI,GAAG,CAAC,KAAK,IAAI,CAAC,EAAE;MAC3EC,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACJ;IAEAnB,IAAI,CAACJ,MAAM,GAAG,IAAI;IAClBI,IAAI,CAACH,SAAS,GAAGkB,gBAAgB;IACjCtB,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAAC,CAAC;IAEpBuB,gBAAgB,CAACK,OAAO,CAACF,GAAG,IAAIJ,QAAQ,CAACI,GAAG,CAAC,GAAGlB,IAAI,CAACN,EAAE,CAAC;IACxDJ,QAAQ,CAACwB,QAAQ,CAAC;EACtB,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAACK,UAAU,EAAE1B,IAAI,KAAK;IAC3C,MAAME,SAAS,GAAG,EAAE;IACpB,KAAK,IAAIyB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG3B,IAAI,EAAE2B,CAAC,EAAE,EAAE;MAC3B,MAAMC,QAAQ,GAAGF,UAAU,GAAGC,CAAC;MAC/B,IAAIC,QAAQ,GAAG,GAAG,IAAIC,IAAI,CAACC,KAAK,CAACF,QAAQ,GAAGvC,UAAU,CAAC,KAAKwC,IAAI,CAACC,KAAK,CAACJ,UAAU,GAAGrC,UAAU,CAAC,EAAE;QAC7Fa,SAAS,CAAC6B,IAAI,CAACH,QAAQ,CAAC;MAC5B,CAAC,MAAM;QACH,OAAO,IAAI;MACf;IACJ;IACA,OAAO1B,SAAS;EACpB,CAAC;EAED,oBACIhB,OAAA;IAAK8C,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjB/C,OAAA,CAACH,MAAM;MAAAmD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEVnD,OAAA;MAAM8C,SAAS,EAAC,MAAM;MAAAC,QAAA,gBAClB/C,OAAA;QAAA+C,QAAA,eACI/C,OAAA;UAAA+C,QAAA,EAAI;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eAETnD,OAAA;QAAA+C,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBnD,OAAA;QAAK8C,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAE1B/C,OAAA;UAAK8C,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC1B/C,OAAA;YAAK8C,SAAS,EAAC;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EAClC9C,aAAa,CAAC+C,GAAG,CAAEC,GAAG,iBACnBrD,OAAA;YAAe8C,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAEM;UAAG,GAA/BA,GAAG;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAkC,CAClD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAGNnD,OAAA;UAAK8C,SAAS,EAAC,MAAM;UAAAC,QAAA,EAChB3C,UAAU,CAACgD,GAAG,CAAC,CAACE,KAAK,EAAEC,QAAQ,kBAC5BvD,OAAA;YAAiB8C,SAAS,EAAC,KAAK;YAAAC,QAAA,gBAC5B/C,OAAA;cAAK8C,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAEO;YAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EACvC7C,KAAK,CAAC,EAAE,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC0C,GAAG,CAAC,CAACI,CAAC,EAAEC,QAAQ,KAAK;cACpC,MAAM5B,KAAK,GAAG0B,QAAQ,GAAG,EAAE,GAAGE,QAAQ;cACtC,oBACIzD,OAAA;gBAEI8C,SAAS,EAAE,QAAQtC,KAAK,CAACqB,KAAK,CAAC,GAAG,MAAM,GAAG,EAAE,EAAG;gBAChD6B,MAAM,EAAGxC,CAAC,IAAKU,UAAU,CAACV,CAAC,EAAEW,KAAK,CAAE;gBACpC8B,UAAU,EAAGzC,CAAC,IAAKA,CAAC,CAACY,cAAc,CAAC,CAAE;gBAAAiB,QAAA,EAErCvC,KAAK,CAACqB,KAAK,CAAC,GAAG,GAAG,GAAG;cAAE,GALnBA,KAAK;gBAAAmB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAMT,CAAC;YAEd,CAAC,CAAC;UAAA,GAdIG,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAeV,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAEPnD,OAAA,CAACF,MAAM;MAAAkD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd;AAACjD,EAAA,CA3GQD,IAAI;AAAA2D,EAAA,GAAJ3D,IAAI;AA6Gb,eAAeA,IAAI;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}