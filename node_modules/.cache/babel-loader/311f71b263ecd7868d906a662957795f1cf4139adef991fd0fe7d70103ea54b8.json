{"ast":null,"code":"var _jsxFileName = \"/Users/dereklaister/Desktop/CS5610p2/src/pages/game/Normal.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Navbar from '../../components/Navbar';\nimport Footer from '../../components/Footer';\nimport SetEnemyBoard from '../../components/SetEnemyBoard';\nimport '../../styles/global.css';\nimport '../../styles/normal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Normal() {\n  _s();\n  const BOARD_SIZE = 10;\n\n  // Board state\n  const [board, setBoard] = useState(Array(100).fill(null));\n  const [enemyBoard, setEnemyBoard] = useState(Array(100).fill(null));\n\n  // Game state\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [timer, setTimer] = useState(0);\n  const [playerTurn, setPlayerTurn] = useState(true); // Player starts first\n\n  useEffect(() => {\n    let interval;\n    if (gameStarted && !gameOver) {\n      interval = setInterval(() => setTimer(t => t + 1), 1000);\n    }\n    return () => clearInterval(interval);\n  }, [gameStarted, gameOver]);\n  const checkGameOver = board => {\n    return board.every(cell => cell === null || cell === \"H\" || cell === \"M\");\n  };\n\n  // Player attacks enemy board\n  const attackEnemy = index => {\n    if (!gameStarted) setGameStarted(true);\n    if (!playerTurn || gameOver || enemyBoard[index] === \"H\" || enemyBoard[index] === \"M\") return;\n    let newBoard = [...enemyBoard];\n    newBoard[index] = enemyBoard[index] !== null ? \"H\" : \"M\";\n    setEnemyBoard(newBoard);\n    if (checkGameOver(newBoard)) {\n      setGameOver(true);\n      return;\n    }\n    setPlayerTurn(false); // Switch turn to enemy\n  };\n\n  // Enemy randomly attacks player's board\n  const enemyAttack = () => {\n    if (gameOver || playerTurn) return; // Only attack on enemy's turn\n\n    let availableCells = board.map((cell, index) => cell !== \"H\" && cell !== \"M\" ? index : null).filter(index => index !== null);\n    if (availableCells.length === 0) return;\n    let randomIndex = availableCells[Math.floor(Math.random() * availableCells.length)];\n    let newBoard = [...board];\n    newBoard[randomIndex] = newBoard[randomIndex] !== null ? \"H\" : \"M\";\n    setBoard(newBoard);\n    if (checkGameOver(newBoard)) {\n      setGameOver(true);\n      return;\n    }\n    setPlayerTurn(true); // Switch turn back to player\n  };\n\n  // Automatically trigger enemy attack after player's turn\n  useEffect(() => {\n    if (!playerTurn && !gameOver) {\n      setTimeout(enemyAttack, 1000); // Delay enemy attack for better game flow\n    }\n  }, [playerTurn, gameOver]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"play\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Battleship Game, Normal Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timerColor\",\n            children: new Date(timer * 1000).toISOString().substr(11, 8)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          className: \"restart-button\",\n          children: \"Reset Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: board.map((cell, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cell ${cell === \"H\" ? 'hit' : cell === \"M\" ? 'miss' : ''}`,\n          children: cell === \"H\" ? \"✔\" : cell === \"M\" ? \"✖\" : \"\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enemy Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: enemyBoard.map((cell, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cell ${cell === \"H\" ? 'hit' : cell === \"M\" ? 'miss' : ''}`,\n          onClick: () => attackEnemy(index),\n          children: cell === \"H\" ? \"✔\" : cell === \"M\" ? \"✖\" : \"\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SetEnemyBoard, {\n        setEnemyBoard: setEnemyBoard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"game-over\",\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(Normal, \"Sg0rvVM5FdpWEECnvZLdC4OnaWM=\");\n_c = Normal;\nexport default Normal;\nvar _c;\n$RefreshReg$(_c, \"Normal\");","map":{"version":3,"names":["useState","useEffect","Navbar","Footer","SetEnemyBoard","jsxDEV","_jsxDEV","Normal","_s","BOARD_SIZE","board","setBoard","Array","fill","enemyBoard","setEnemyBoard","gameStarted","setGameStarted","gameOver","setGameOver","timer","setTimer","playerTurn","setPlayerTurn","interval","setInterval","t","clearInterval","checkGameOver","every","cell","attackEnemy","index","newBoard","enemyAttack","availableCells","map","filter","length","randomIndex","Math","floor","random","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","toISOString","substr","onClick","window","location","reload","_c","$RefreshReg$"],"sources":["/Users/dereklaister/Desktop/CS5610p2/src/pages/game/Normal.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport Navbar from '../../components/Navbar';\nimport Footer from '../../components/Footer';\nimport SetEnemyBoard from '../../components/SetEnemyBoard';\nimport '../../styles/global.css';\nimport '../../styles/normal.css';\n\nfunction Normal() {\n    const BOARD_SIZE = 10;\n\n    // Board state\n    const [board, setBoard] = useState(Array(100).fill(null));\n    const [enemyBoard, setEnemyBoard] = useState(Array(100).fill(null));\n\n    // Game state\n    const [gameStarted, setGameStarted] = useState(false);\n    const [gameOver, setGameOver] = useState(false);\n    const [timer, setTimer] = useState(0);\n    const [playerTurn, setPlayerTurn] = useState(true); // Player starts first\n\n    useEffect(() => {\n        let interval;\n        if (gameStarted && !gameOver) {\n            interval = setInterval(() => setTimer((t) => t + 1), 1000);\n        }\n        return () => clearInterval(interval);\n    }, [gameStarted, gameOver]);\n\n    const checkGameOver = (board) => {\n        return board.every((cell) => cell === null || cell === \"H\" || cell === \"M\");\n    };\n\n    // Player attacks enemy board\n    const attackEnemy = (index) => {\n        if (!gameStarted) setGameStarted(true);\n        if (!playerTurn || gameOver || enemyBoard[index] === \"H\" || enemyBoard[index] === \"M\") return;\n\n        let newBoard = [...enemyBoard];\n        newBoard[index] = enemyBoard[index] !== null ? \"H\" : \"M\";\n        setEnemyBoard(newBoard);\n\n        if (checkGameOver(newBoard)) {\n            setGameOver(true);\n            return;\n        }\n\n        setPlayerTurn(false); // Switch turn to enemy\n    };\n\n    // Enemy randomly attacks player's board\n    const enemyAttack = () => {\n        if (gameOver || playerTurn) return; // Only attack on enemy's turn\n\n        let availableCells = board\n            .map((cell, index) => (cell !== \"H\" && cell !== \"M\" ? index : null))\n            .filter(index => index !== null);\n\n        if (availableCells.length === 0) return;\n\n        let randomIndex = availableCells[Math.floor(Math.random() * availableCells.length)];\n        let newBoard = [...board];\n        newBoard[randomIndex] = newBoard[randomIndex] !== null ? \"H\" : \"M\";\n        setBoard(newBoard);\n\n        if (checkGameOver(newBoard)) {\n            setGameOver(true);\n            return;\n        }\n\n        setPlayerTurn(true); // Switch turn back to player\n    };\n\n    // Automatically trigger enemy attack after player's turn\n    useEffect(() => {\n        if (!playerTurn && !gameOver) {\n            setTimeout(enemyAttack, 1000); // Delay enemy attack for better game flow\n        }\n    }, [playerTurn, gameOver]);\n\n    return (\n        <div className=\"play\">\n            <Navbar />\n\n            <main className=\"main\">\n                <header>\n                    <h1>Battleship Game, Normal Mode</h1>\n                </header>\n\n                <div className=\"top-controls\">\n                    <p>\n                        <span>Time:</span>\n                        <span className=\"timerColor\">{new Date(timer * 1000).toISOString().substr(11, 8)}</span>\n                    </p>\n                    <button onClick={() => window.location.reload()} className=\"restart-button\">\n                        Reset Game\n                    </button>\n                </div>\n\n                <h2>Your Board</h2>\n                <div className=\"board\">\n                    {board.map((cell, index) => (\n                        <div key={index} className={`cell ${cell === \"H\" ? 'hit' : cell === \"M\" ? 'miss' : ''}`}>\n                            {cell === \"H\" ? \"✔\" : cell === \"M\" ? \"✖\" : \"\"}\n                        </div>\n                    ))}\n                </div>\n\n                <h2>Enemy Board</h2>\n                <div className=\"board\">\n                    {enemyBoard.map((cell, index) => (\n                        <div key={index}\n                             className={`cell ${cell === \"H\" ? 'hit' : cell === \"M\" ? 'miss' : ''}`}\n                             onClick={() => attackEnemy(index)}\n                        >\n                            {cell === \"H\" ? \"✔\" : cell === \"M\" ? \"✖\" : \"\"}\n                        </div>\n                    ))}\n                </div>\n\n                <SetEnemyBoard setEnemyBoard={setEnemyBoard} />\n\n                {gameOver && <p className=\"game-over\">Game Over!</p>}\n            </main>\n\n            <Footer />\n        </div>\n    );\n}\n\nexport default Normal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}