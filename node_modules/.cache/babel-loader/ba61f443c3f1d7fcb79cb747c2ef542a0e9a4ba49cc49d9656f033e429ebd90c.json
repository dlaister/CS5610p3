{"ast":null,"code":"var _jsxFileName = \"/Users/dereklaister/Desktop/CS5610p2/src/pages/Sample.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Sample.css'; // Assuming you have the updated CSS file here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sample() {\n  _s();\n  const [ships, setShips] = useState([{\n    id: 1,\n    x: 3,\n    y: 4,\n    size: 3,\n    orientation: 'horizontal'\n  }, {\n    id: 2,\n    x: 5,\n    y: 7,\n    size: 4,\n    orientation: 'vertical'\n  }]);\n\n  // Handle cell click to toggle between hit and miss\n  const handleCellClick = (x, y) => {\n    // Implement hit or miss logic here\n    console.log(`Cell clicked: x=${x}, y=${y}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sample\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"Game Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-container\",\n        children: Array.from({\n          length: 12\n        }, (_, rowIndex) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: Array.from({\n            length: 11\n          }, (_, colIndex) => {\n            const isShip = ships.some(ship => ship.orientation === 'horizontal' && ship.y === rowIndex && colIndex >= ship.x && colIndex < ship.x + ship.size || ship.orientation === 'vertical' && ship.x === colIndex && rowIndex >= ship.y && rowIndex < ship.y + ship.size);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `cell ${isShip ? 'ship' : ''}`,\n              onClick: () => handleCellClick(rowIndex, colIndex),\n              children: isShip && 'S'\n            }, colIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 37\n            }, this);\n          })\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(Sample, \"1zm/Ql13c6f5+KSZYRzaxi00Q+M=\");\n_c = Sample;\nexport default Sample;\nvar _c;\n$RefreshReg$(_c, \"Sample\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Sample","_s","ships","setShips","id","x","y","size","orientation","handleCellClick","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","_","rowIndex","Fragment","colIndex","isShip","some","ship","onClick","_c","$RefreshReg$"],"sources":["/Users/dereklaister/Desktop/CS5610p2/src/pages/Sample.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Sample.css'; // Assuming you have the updated CSS file here\n\nfunction Sample() {\n    const [ships, setShips] = useState([\n        { id: 1, x: 3, y: 4, size: 3, orientation: 'horizontal' },\n        { id: 2, x: 5, y: 7, size: 4, orientation: 'vertical' }\n    ]);\n\n    // Handle cell click to toggle between hit and miss\n    const handleCellClick = (x, y) => {\n        // Implement hit or miss logic here\n        console.log(`Cell clicked: x=${x}, y=${y}`);\n    };\n\n    return (\n        <div className=\"sample\">\n            <div className=\"container\">\n                <div className=\"header\">Game Board</div>\n                <div className=\"grid-container\">\n                    {Array.from({ length: 12 }, (_, rowIndex) => (\n                        <React.Fragment key={rowIndex}>\n                            {Array.from({ length: 11 }, (_, colIndex) => {\n                                const isShip = ships.some(\n                                    (ship) =>\n                                        (ship.orientation === 'horizontal' &&\n                                            ship.y === rowIndex &&\n                                            colIndex >= ship.x &&\n                                            colIndex < ship.x + ship.size) ||\n                                        (ship.orientation === 'vertical' &&\n                                            ship.x === colIndex &&\n                                            rowIndex >= ship.y &&\n                                            rowIndex < ship.y + ship.size)\n                                );\n\n                                return (\n                                    <div\n                                        key={colIndex}\n                                        className={`cell ${isShip ? 'ship' : ''}`}\n                                        onClick={() => handleCellClick(rowIndex, colIndex)}\n                                    >\n                                        {isShip && 'S'}\n                                    </div>\n                                );\n                            })}\n                        </React.Fragment>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Sample;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}